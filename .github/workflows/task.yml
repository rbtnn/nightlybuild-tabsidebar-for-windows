name: nightlybuild-tabsidebar-for-windows

on:
  post:
  schedule:
    - cron: '0 15 * * *'

jobs:

  build:
    runs-on: windows-latest

    steps:
      - name: Checkout actions/checkout@v2
        uses: actions/checkout@v2

      - name: Update tabsidebar repository
        shell: cmd
        run: |
          git config --global user.email "naru123456789@gmail.com"
          git config --global user.name "rbtnn"
          git clone https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/rbtnn/vim.git
          cd vim
          git remote add upstream https://github.com/vim/vim.git
          git fetch upstream
          git merge upstream/master
          git push -u origin tabsidebar

      - name: Checkout ilammy/msvc-dev-cmd@v1
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Build Vim for x86
        shell: cmd
        run: |
          cd vim\src
          nmake /nologo /f Make_mvc.mak GUI=yes USE_WIN32MAK=no COLOR_EMOJI=yes OLE=yes DYNAMIC_IME=yes IME=yes GIME=yes DEBUG=no ICONV=yes
          nmake /nologo /f Make_mvc.mak GUI=no  USE_WIN32MAK=no COLOR_EMOJI=yes OLE=yes DYNAMIC_IME=yes IME=yes GIME=yes DEBUG=no ICONV=yes
          move gvim.exe gvim-x86.exe
          move vim.exe  vim-x86.exe

#      - name: Checkout ilammy/msvc-dev-cmd@v1
#        uses: ilammy/msvc-dev-cmd@v1
#        with:
#          arch: x64
#
#      - name: Build Vim for x64
#        shell: cmd
#        run: |
#          cd vim\src
#          nmake /nologo /f Make_mvc.mak GUI=yes USE_WIN32MAK=no COLOR_EMOJI=yes OLE=yes DYNAMIC_IME=yes IME=yes GIME=yes DEBUG=no ICONV=yes
#          nmake /nologo /f Make_mvc.mak GUI=no  USE_WIN32MAK=no COLOR_EMOJI=yes OLE=yes DYNAMIC_IME=yes IME=yes GIME=yes DEBUG=no ICONV=yes
#          move gvim.exe gvim-x64.exe
#          move vim.exe  vim-x64.exe

      - name: type tagname.txt
        id: tagname
        shell: cmd
        run: |
          vim\src\vim-x86.exe -u NONO -N --cmd ":call writefile(['::set-output name=tagname::' .. v:versionlong], 'tagname.txt')" --cmd ":qa!"
          type tagname.txt
      
      - name: Update version.txt
        shell: cmd
        run: |
          git config --global user.email "naru123456789@gmail.com"
          git config --global user.name "rbtnn"
          vim\src\vim-x86.exe -u NONO -N --cmd ":call writefile(split(execute('version'), '\n'), 'version.txt')" --cmd ":qa!"
          git add version.txt
          git commit -m "update version.txt"
          git push -u origin master

      - name: create-zip.bat
        shell: cmd
        run: |
          cd vim
          ..\create-zip.bat

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          tag_name: ${{ steps.tagname.outputs.tagname }}
          release_name: Release
          draft: false
          prerelease: false

      - name: Upload nightlybuild-tabsidebar-for-windows.zip as Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vim/nightlybuild-tabsidebar-for-windows.zip
          asset_name: nightlybuild-tabsidebar-for-windows.zip
          asset_content_type: application/zip
          
